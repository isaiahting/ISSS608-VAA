---
title: "HandsOnEx1"
author: "Joshua TING"
execute:
  eval: true
  echo: true
  warning: false
  freeze: true
---

# Getting Started

## Install and Launching R packages

The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.

```{r}
pacman::p_load(tidyverse) 
```

## Importing the data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

# Plotting a simple bar chart

```{r}
ggplot(data=exam_data,
       aes(x = RACE)) +
  geom_bar() 
```

#1.3.1 R Graphics VS ggplot

```{r}
hist(exam_data$MATHS)

ggplot(data=exam_data, aes(x = MATHS)) +
  geom_histogram(bins=10, 
                 boundary = 100,
                 color="black", 
                 fill="grey") +
  ggtitle("Distribution of Maths scores")
```

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS))
```

1.7.1 Geometric Objects: geom_bar

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar()
```

1.7.2 Geometric Objects: geom_dotplot

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(dotsize = 0.5)

ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(binwidth=2.5,         
               dotsize = 0.5) +      
  scale_y_continuous(NULL,           
                     breaks = NULL)  

```

1.7.3 Geometric Objects: geom_histogram()

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_histogram()       
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20,            
                 color="black",      
                 fill="light blue")  
```

1.7.4 Modifying a geometric object by changing geom()

```{r}
      ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20,            
                 color="black",      
                 fill="light blue")  
```

Modifying a geometric object by changing aes()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           fill = GENDER)) +
  geom_histogram(bins=20, 
                 color="grey30")
```

1.7.6 Geometric Objects: geom-density()

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_density() 

ggplot(data=exam_data, 
       aes(x = MATHS, 
           colour = GENDER)) +
  geom_density()
```

1.7.7 Geometric Objects: geom_boxplot

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS,       
           x= GENDER)) +    
  geom_boxplot()            
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_boxplot(notch=TRUE)
```

1.7.8 Geometric Objects: geom_violin

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_violin()
```

1.7.9 Geometric Objects: geom_point()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point()            
```

1.7.10 geom objects can be combined

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_boxplot() +                    
  geom_point(position="jitter", 
             size = 0.5)        
```

1.8 Essential Grammatical Elements in ggplot2: stat

1.8.1 Working with stat()

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot()
```

1.8.2 Working with stat - the stat_summary() method

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot() +
  stat_summary(geom = "point",       
               fun="mean",         
               colour ="red",        
               size=4)               
```

1.8.3 Working with stat - the geom() method

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot() +
  geom_point(stat="summary",        
             fun.y="mean",           
             colour ="red",          
             size=4)          
```

1.8.4 Adding a best fit curve on a scatterplot?

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(size=0.5)

ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5)

ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5)
```

1.9 Essential Grammatical Elements in ggplot2: Facets

1.9.1 Working with facet_wrap()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20) +
    facet_wrap(~ CLASS)
```

1.9.2 facet_grid() function

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20) +
    facet_grid(~ CLASS)
```

1.10 Essential Grammatical Elements in ggplot2: Coordinates

1.10.1 Working with Coordinate

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar()

#flip horizontal
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip()
```

1.10.2 Changing the y- and x-axis range

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, size=0.5)

ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))


```
